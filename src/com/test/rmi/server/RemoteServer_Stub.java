// Stub class generated by rmic, do not edit.
// Contents subject to change without notice.

package com.test.rmi.server;

public final class RemoteServer_Stub
    extends java.rmi.server.RemoteStub
    implements com.test.rmi.RemoteInterface, java.rmi.Remote
{
    private static final long serialVersionUID = 2;
    
    private static java.lang.reflect.Method $method_doRemotePrint_0;
    private static java.lang.reflect.Method $method_getRemoteList_1;
    
    static {
	try {
	    $method_doRemotePrint_0 = com.test.rmi.RemoteInterface.class.getMethod("doRemotePrint", new java.lang.Class[] {java.lang.String.class});
	    $method_getRemoteList_1 = com.test.rmi.RemoteInterface.class.getMethod("getRemoteList", new java.lang.Class[] {});
	} catch (java.lang.NoSuchMethodException e) {
	    throw new java.lang.NoSuchMethodError(
		"stub class initialization failed");
	}
    }
    
    // constructors
    public RemoteServer_Stub(java.rmi.server.RemoteRef ref) {
	super(ref);
    }
    
    // methods from remote interfaces
    
    // implementation of doRemotePrint(String)
    public int doRemotePrint(java.lang.String $param_String_1)
	throws java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_doRemotePrint_0, new java.lang.Object[] {$param_String_1}, 9047370223470745292L);
	    return ((java.lang.Integer) $result).intValue();
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of getRemoteList()
    public java.util.List getRemoteList()
	throws java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_getRemoteList_1, null, 8412371585088054849L);
	    return ((java.util.List) $result);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
}
